{"ast":null,"code":"import React from\"react\";import classes from\"./Checkout.module.css\";import useInputValidity from\"../UI/use-inputValidity\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Checkout=function Checkout(props){var isNotEmpty=function isNotEmpty(value){return value.trim().length!==0;};var is5Chars=function is5Chars(value){return value.trim().length===5;};var _useInputValidity=useInputValidity(isNotEmpty),enteredName=_useInputValidity.enteredInput,isNameValid=_useInputValidity.isInputValid,nameHasError=_useInputValidity.hasError,nameChangeHandler=_useInputValidity.inputChangehandler,nameBlurHandler=_useInputValidity.inputBlurhandler,resetName=_useInputValidity.resetInput;var _useInputValidity2=useInputValidity(isNotEmpty),enteredStreet=_useInputValidity2.enteredInput,isStreetValid=_useInputValidity2.isInputValid,streetHasError=_useInputValidity2.hasError,streetChangeHandler=_useInputValidity2.inputChangehandler,streetBlurHandler=_useInputValidity2.inputBlurhandler,resetStreet=_useInputValidity2.resetInput;var _useInputValidity3=useInputValidity(isNotEmpty),enteredCity=_useInputValidity3.enteredInput,isCityValid=_useInputValidity3.isInputValid,cityHasError=_useInputValidity3.hasError,cityChangeHandler=_useInputValidity3.inputChangehandler,cityBlurHandler=_useInputValidity3.inputBlurhandler,resetCity=_useInputValidity3.resetInput;var _useInputValidity4=useInputValidity(is5Chars),enteredPostal=_useInputValidity4.enteredInput,isPostalValid=_useInputValidity4.isInputValid,postalHasError=_useInputValidity4.hasError,postalChangeHandler=_useInputValidity4.inputChangehandler,postalBlurHandler=_useInputValidity4.inputBlurhandler,resetPostal=_useInputValidity4.resetInput;var formValid=isNameValid&&isStreetValid&&isPostalValid&&isCityValid;var confirmHandler=function confirmHandler(ev){ev.preventDefault();if(!formValid){return;}// console.log(enteredName, enteredStreet, enteredPostal, enteredCity);\nprops.onConfirm({name:enteredName,street:enteredStreet,city:enteredCity,postal:enteredPostal});resetName();resetPostal();resetStreet();resetCity();};var nameInputClasses=nameHasError?\"\".concat(classes.control,\" \").concat(classes.invalid):\"\".concat(classes.control);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameInputClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",value:enteredName,onChange:nameChangeHandler,onBlur:nameBlurHandler}),nameHasError&&/*#__PURE__*/_jsx(\"p\",{className:classes.error,children:\"Name has error\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",value:enteredStreet,onChange:streetChangeHandler,onBlur:streetBlurHandler}),streetHasError&&/*#__PURE__*/_jsx(\"p\",{className:classes.error,children:\"Street has error\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",value:enteredPostal,onChange:postalChangeHandler,onBlur:postalBlurHandler}),postalHasError&&/*#__PURE__*/_jsx(\"p\",{className:classes.error,children:\"Postal has error\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",value:enteredCity,onChange:cityChangeHandler,onBlur:cityBlurHandler}),cityHasError&&/*#__PURE__*/_jsx(\"p\",{className:classes.error,children:\"City has error\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{disabled:!formValid,className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"sources":["/Users/poojapasupu/Documents/GitHub-repos/React-Food-App/src/components/Cart/Checkout.js"],"names":["React","classes","useInputValidity","Checkout","props","isNotEmpty","value","trim","length","is5Chars","enteredName","enteredInput","isNameValid","isInputValid","nameHasError","hasError","nameChangeHandler","inputChangehandler","nameBlurHandler","inputBlurhandler","resetName","resetInput","enteredStreet","isStreetValid","streetHasError","streetChangeHandler","streetBlurHandler","resetStreet","enteredCity","isCityValid","cityHasError","cityChangeHandler","cityBlurHandler","resetCity","enteredPostal","isPostalValid","postalHasError","postalChangeHandler","postalBlurHandler","resetPostal","formValid","confirmHandler","ev","preventDefault","onConfirm","name","street","city","postal","nameInputClasses","control","invalid","form","error","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport useInputValidity from \"../UI/use-inputValidity\";\n\nconst Checkout = (props) => {\n\n  const isNotEmpty = (value) => value.trim().length !== 0;\n  const is5Chars = (value) => value.trim().length === 5;\n\n  const {\n    enteredInput: enteredName,\n    isInputValid: isNameValid,\n    hasError: nameHasError,\n    inputChangehandler: nameChangeHandler,\n    inputBlurhandler: nameBlurHandler,\n    resetInput: resetName,\n  } = useInputValidity(isNotEmpty);\n\n  const {\n    enteredInput: enteredStreet,\n    isInputValid: isStreetValid,\n    hasError: streetHasError,\n    inputChangehandler: streetChangeHandler,\n    inputBlurhandler: streetBlurHandler,\n    resetInput: resetStreet,\n  } = useInputValidity(isNotEmpty);\n\n  const {\n    enteredInput: enteredCity,\n    isInputValid: isCityValid,\n    hasError: cityHasError,\n    inputChangehandler: cityChangeHandler,\n    inputBlurhandler: cityBlurHandler,\n    resetInput: resetCity,\n  } = useInputValidity(isNotEmpty);\n\n  const {\n    enteredInput: enteredPostal,\n    isInputValid: isPostalValid,\n    hasError: postalHasError,\n    inputChangehandler: postalChangeHandler,\n    inputBlurhandler: postalBlurHandler,\n    resetInput: resetPostal,\n  } = useInputValidity(is5Chars);\n\n  const formValid =\n    isNameValid && isStreetValid && isPostalValid && isCityValid;\n\n  const confirmHandler = (ev) => {\n    ev.preventDefault();\n\n    if (!formValid) {\n      return;\n    }\n\n    // console.log(enteredName, enteredStreet, enteredPostal, enteredCity);\n\n    props.onConfirm({\n        name: enteredName,\n        street: enteredStreet,\n        city: enteredCity,\n        postal: enteredPostal\n    });\n    resetName();\n    resetPostal();\n    resetStreet();\n    resetCity();\n  };\n\n  const nameInputClasses = nameHasError ? `${classes.control} ${classes.invalid}` : `${classes.control}`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n        />\n        {nameHasError && <p className={classes.error}>Name has error</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"street\">Street</label>\n        <input\n          type=\"text\"\n          id=\"street\"\n          value={enteredStreet}\n          onChange={streetChangeHandler}\n          onBlur={streetBlurHandler}\n        />\n        {streetHasError && <p className={classes.error}>Street has error</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input\n          type=\"text\"\n          id=\"postal\"\n          value={enteredPostal}\n          onChange={postalChangeHandler}\n          onBlur={postalBlurHandler}\n        />\n        {postalHasError && <p className={classes.error}>Postal has error</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"city\">City</label>\n        <input\n          type=\"text\"\n          id=\"city\"\n          value={enteredCity}\n          onChange={cityChangeHandler}\n          onBlur={cityBlurHandler}\n        />\n        {cityHasError && <p className={classes.error}>City has error</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button disabled={!formValid} className={classes.submit}>\n          Confirm\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}