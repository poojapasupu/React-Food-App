{"ast":null,"code":"var _jsxFileName = \"/Users/poojapasupu/Documents/react_workspace/food-order-app-forms-13/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport useInputValidity from \"../UI/use-inputValidity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  // const nameRef= useRef();\n  // const streetRef= useRef();\n  // const postalRef= useRef();\n  // const cityRef= useRef();\n  const isEmpty = value => value.trim().length === 0;\n\n  const is5Chars = value => value.trim().length === 5;\n\n  const {\n    enteredInput: enteredName,\n    isInputValid: isNameValid,\n    hasError: nameHasError,\n    inputChangehandler: nameChangeHandler,\n    inputBlurhandler: nameBlurHandler,\n    resetInput: resetName\n  } = useInputValidity(isEmpty);\n\n  const confirmHandler = ev => {\n    ev.preventDefault(); // const enteredName = nameRef.current.value;\n    // const enteredStreet = streetRef.current.value;\n    // const enteredPostal = postalRef.current.value;\n    // const enteredCity = cityRef.current.value;\n    // const nameValid= !isEmpty(enteredName);\n    // const streetValid= !isEmpty(enteredStreet);\n    // const postalValid= !isEmpty(enteredPostal);\n    // const cityValid= !is5Chars(enteredCity);\n\n    const formValid = isNameValid && streetValid && postalValid && cityValid;\n\n    if (!formValid) {\n      return;\n    }\n\n    console.log(enteredName, enteredStreet, enteredPostal, enteredCity);\n    resetName();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name has error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"NEB5oRQCzm8rawMI3+tGHMjAXx0=\", false, function () {\n  return [useInputValidity];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/poojapasupu/Documents/react_workspace/food-order-app-forms-13/src/components/Cart/Checkout.js"],"names":["React","useRef","classes","useInputValidity","Checkout","props","isEmpty","value","trim","length","is5Chars","enteredInput","enteredName","isInputValid","isNameValid","hasError","nameHasError","inputChangehandler","nameChangeHandler","inputBlurhandler","nameBlurHandler","resetInput","resetName","confirmHandler","ev","preventDefault","formValid","streetValid","postalValid","cityValid","console","log","enteredStreet","enteredPostal","enteredCity","form","control","streetRef","postalRef","cityRef","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport useInputValidity from \"../UI/use-inputValidity\";\n\nconst Checkout = (props) => {\n    // const nameRef= useRef();\n    // const streetRef= useRef();\n    // const postalRef= useRef();\n    // const cityRef= useRef();\n\n    const isEmpty = value => value.trim().length === 0;\n    const is5Chars = value => value.trim().length ===5;\n\n    const {\n        enteredInput: enteredName,\n        isInputValid : isNameValid,\n        hasError: nameHasError,\n        inputChangehandler: nameChangeHandler,\n        inputBlurhandler : nameBlurHandler,\n        resetInput: resetName\n    } = useInputValidity(isEmpty);\n    \n\n\n  const confirmHandler = (ev) => {\n    ev.preventDefault();\n\n    \n\n\n    // const enteredName = nameRef.current.value;\n    // const enteredStreet = streetRef.current.value;\n    // const enteredPostal = postalRef.current.value;\n    // const enteredCity = cityRef.current.value;\n\n    // const nameValid= !isEmpty(enteredName);\n    // const streetValid= !isEmpty(enteredStreet);\n    // const postalValid= !isEmpty(enteredPostal);\n    // const cityValid= !is5Chars(enteredCity);\n\n    const formValid = isNameValid && streetValid && postalValid && cityValid;\n\n    if(!formValid){\n        return;\n    }\n\n    console.log(enteredName, enteredStreet, enteredPostal, enteredCity);\n    resetName();\n\n  };\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" value={enteredName} onChange={nameChangeHandler} onBlur={nameBlurHandler}/>\n        {nameHasError && <p>Name has error</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetRef}/>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalRef}/>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityRef}/>\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}