{"ast":null,"code":"var _jsxFileName = \"/Users/poojapasupu/Documents/GitHub-repos/React-Food-App/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [hasError, setHasError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [meals, setMeals] = useState([]);\n  const mealsFetchFn = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(\"https://react-http-55fae-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Error occured!\");\n      }\n\n      const data = await response.json();\n      const DUMMY_MEALS = [];\n\n      for (var key in data) {\n        DUMMY_MEALS.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(DUMMY_MEALS);\n      setIsLoading(false);\n    } catch (error) {\n      setHasError(error.message);\n      setIsLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    mealsFetchFn();\n  }, [mealsFetchFn]);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n  let content;\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this);\n  } else if (hasError) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: hasError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this);\n  } else {\n    content = mealsList;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"4pdZT40d2Kukh0iz6onHgV/3QY8=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/poojapasupu/Documents/GitHub-repos/React-Food-App/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useCallback","useState","AvailableMeals","hasError","setHasError","isLoading","setIsLoading","meals","setMeals","mealsFetchFn","response","fetch","ok","Error","data","json","DUMMY_MEALS","key","push","id","name","description","price","error","message","mealsList","map","meal","content"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,QAAiD,OAAjD;;;AAIA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,YAAY,GAAGT,WAAW,CAAC,YAAY;AAC3C,QAAI;AACFM,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAD0B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,IAAIC,GAAT,IAAgBH,IAAhB,EAAsB;AACpBE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUG,IAFD;AAGfC,UAAAA,WAAW,EAAEP,IAAI,CAACG,GAAD,CAAJ,CAAUI,WAHR;AAIfC,UAAAA,KAAK,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUK;AAJF,SAAjB;AAMD;;AACDd,MAAAA,QAAQ,CAACQ,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KApBD,CAoBE,OAAOiB,KAAP,EAAc;AACdnB,MAAAA,WAAW,CAACmB,KAAK,CAACC,OAAP,CAAX;AACAlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAzB+B,EAyB7B,EAzB6B,CAAhC;AA2BAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,QAAMgB,SAAS,GAAGlB,KAAK,CAACmB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACR,EAFX;AAGE,IAAA,IAAI,EAAEQ,IAAI,CAACP,IAHb;AAIE,IAAA,WAAW,EAAEO,IAAI,CAACN,WAJpB;AAKE,IAAA,KAAK,EAAEM,IAAI,CAACL;AALd,KACOK,IAAI,CAACR,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,MAAIS,OAAJ;;AAEA,MAAIvB,SAAJ,EAAe;AACbuB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFD,MAEM,IAAIzB,QAAJ,EAAc;AAClByB,IAAAA,OAAO,gBAAG;AAAA,gBAAIzB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFK,MAEC;AACLyB,IAAAA,OAAO,GAAGH,SAAV;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAE3B,OAAO,CAACS,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKqB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/DD;;GAAM1B,c;;KAAAA,c;AAiEN,eAAeA,cAAf","sourcesContent":["import Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useCallback, useState } from \"react\";\n\n\n\nconst AvailableMeals = () => {\n  const [hasError, setHasError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [meals, setMeals] = useState([]);\n\n  const mealsFetchFn = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(\n        \"https://react-http-55fae-default-rtdb.firebaseio.com/meals.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Error occured!\");\n      }\n      const data = await response.json();\n      const DUMMY_MEALS = [];\n      for (var key in data) {\n        DUMMY_MEALS.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price,\n        });\n      }\n      setMeals(DUMMY_MEALS);\n      setIsLoading(false);\n    } catch (error) {\n      setHasError(error.message);\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    mealsFetchFn();\n  }, [mealsFetchFn]);\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  let content;\n\n  if (isLoading) {\n    content = <p>Loading...please wait</p>;\n  }else if (hasError) {\n    content = <p>{hasError}</p>; \n  } else {\n    content = mealsList;\n  }\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{content}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}