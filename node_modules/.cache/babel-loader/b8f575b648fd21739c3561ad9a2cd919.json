{"ast":null,"code":"var _jsxFileName = \"/Users/poojapasupu/Documents/react_workspace/food-order-app-forms-13/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [];\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const mealsFetchFn = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(\"https://react-http-55fae-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Error occured!\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n\n      for (var key in data) {\n        DUMMY_MEALS.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n  useEffect(() => {\n    mealsFetchFn();\n  }, [mealsFetchFn]);\n  const mealsList = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this));\n  let content = null;\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this);\n  } else if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this);\n  } else {\n    content = mealsList;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"tc5aaxjaoOxwCQ3ip04AovqcOYA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/poojapasupu/Documents/react_workspace/food-order-app-forms-13/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useCallback","useState","DUMMY_MEALS","AvailableMeals","error","setError","isLoading","setIsLoading","mealsFetchFn","response","fetch","ok","Error","data","json","console","log","key","push","id","name","description","price","message","mealsList","map","meal","content","meals"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,QAAiD,OAAjD;;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,YAAY,GAAGR,WAAW,CAAC,YAAY;AAC3C,QAAI;AACFO,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAD0B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,WAAK,IAAII,GAAT,IAAgBJ,IAAhB,EAAsB;AACpBX,QAAAA,WAAW,CAACgB,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEP,IAAI,CAACI,GAAD,CAAJ,CAAUG,IAFD;AAGfC,UAAAA,WAAW,EAAER,IAAI,CAACI,GAAD,CAAJ,CAAUI,WAHR;AAIfC,UAAAA,KAAK,EAAET,IAAI,CAACI,GAAD,CAAJ,CAAUK;AAJF,SAAjB;AAMD;;AACDf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAnBD,CAmBE,OAAOH,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACmB,OAAP,CAAR;AACD;AACF,GAvB+B,EAuB7B,EAvB6B,CAAhC;AAyBAxB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,QAAMgB,SAAS,GAAGtB,WAAW,CAACuB,GAAZ,CAAiBC,IAAD,iBAChC,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACP,EAFX;AAGE,IAAA,IAAI,EAAEO,IAAI,CAACN,IAHb;AAIE,IAAA,WAAW,EAAEM,IAAI,CAACL,WAJpB;AAKE,IAAA,KAAK,EAAEK,IAAI,CAACJ;AALd,KACOI,IAAI,CAACP,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,MAAIQ,OAAO,GAAG,IAAd;;AAEA,MAAIvB,KAAJ,EAAW;AACTuB,IAAAA,OAAO,gBAAG;AAAA,gBAAIvB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFD,MAEO,IAAIE,SAAJ,EAAe;AACpBqB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFM,MAEA;AACLA,IAAAA,OAAO,GAAGH,SAAV;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAE1B,OAAO,CAAC8B,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA5DD;;GAAMxB,c;;KAAAA,c;AA8DN,eAAeA,cAAf","sourcesContent":["import Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useCallback, useState } from \"react\";\n\nconst DUMMY_MEALS = [];\n\nconst AvailableMeals = () => {\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const mealsFetchFn = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(\n        \"https://react-http-55fae-default-rtdb.firebaseio.com/meals.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Error occured!\");\n      }\n      const data = await response.json();\n      console.log(data);\n      for (var key in data) {\n        DUMMY_MEALS.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price,\n        });\n      }\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n\n  useEffect(() => {\n    mealsFetchFn();\n  }, [mealsFetchFn]);\n\n  const mealsList = DUMMY_MEALS.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  let content = null;\n\n  if (error) {\n    content = <p>{error}</p>;\n  } else if (isLoading) {\n    content = <p>Loading...please wait</p>;\n  } else {\n    content = mealsList;\n  }\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{content}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}