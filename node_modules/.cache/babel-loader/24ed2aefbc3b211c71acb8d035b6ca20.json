{"ast":null,"code":"var _jsxFileName = \"/Users/poojapasupu/Documents/react_workspace/food-order-app-forms-13/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport useInputValidity from \"../UI/use-inputValidity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  // const nameRef= useRef();\n  // const streetRef= useRef();\n  // const postalRef= useRef();\n  // const cityRef= useRef();\n  const isNotEmpty = value => value.trim().length !== 0;\n\n  const is5Chars = value => value.trim().length === 5;\n\n  const {\n    enteredInput: enteredName,\n    isInputValid: isNameValid,\n    hasError: nameHasError,\n    inputChangehandler: nameChangeHandler,\n    inputBlurhandler: nameBlurHandler,\n    resetInput: resetName\n  } = useInputValidity(isNotEmpty);\n  const {\n    enteredInput: enteredStreet,\n    isInputValid: isStreetValid,\n    hasError: streetHasError,\n    inputChangehandler: streetChangeHandler,\n    inputBlurhandler: streetBlurHandler,\n    resetInput: resetStreet\n  } = useInputValidity(isNotEmpty);\n  const {\n    enteredInput: enteredCity,\n    isInputValid: isCityValid,\n    hasError: cityHasError,\n    inputChangehandler: cityChangeHandler,\n    inputBlurhandler: cityBlurHandler,\n    resetInput: resetCity\n  } = useInputValidity(isNotEmpty);\n  const {\n    enteredInput: enteredPostal,\n    isInputValid: isPostalValid,\n    hasError: postalHasError,\n    inputChangehandler: postalChangeHandler,\n    inputBlurhandler: postalBlurHandler,\n    resetInput: resetPostal\n  } = useInputValidity(is5Chars);\n  const formValid = isNameValid && isStreetValid && isPostalValid && isCityValid;\n\n  const confirmHandler = ev => {\n    ev.preventDefault(); // const enteredName = nameRef.current.value;\n    // const enteredStreet = streetRef.current.value;\n    // const enteredPostal = postalRef.current.value;\n    // const enteredCity = cityRef.current.value;\n    // const nameValid= !isEmpty(enteredName);\n    // const streetValid= !isEmpty(enteredStreet);\n    // const postalValid= !isEmpty(enteredPostal);\n    // const cityValid= !is5Chars(enteredCity);\n\n    if (!formValid) {\n      return;\n    }\n\n    console.log(enteredName, enteredStreet, enteredPostal, enteredCity);\n    resetName();\n    resetPostal();\n    resetStreet();\n    resetCity();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name has error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        value: enteredStreet,\n        onChange: streetChangeHandler,\n        onBlur: streetBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), streetHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Street has error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        value: enteredPostal,\n        onChange: postalChangeHandler,\n        onBlur: postalBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), postalHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Postal has error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        value: enteredCity,\n        onChange: cityChangeHandler,\n        onBlur: cityBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), cityHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"City has error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"07tN2PjLV3RmEHiVu5p6Zy77aRY=\", false, function () {\n  return [useInputValidity, useInputValidity, useInputValidity, useInputValidity];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/poojapasupu/Documents/react_workspace/food-order-app-forms-13/src/components/Cart/Checkout.js"],"names":["React","classes","useInputValidity","Checkout","props","isNotEmpty","value","trim","length","is5Chars","enteredInput","enteredName","isInputValid","isNameValid","hasError","nameHasError","inputChangehandler","nameChangeHandler","inputBlurhandler","nameBlurHandler","resetInput","resetName","enteredStreet","isStreetValid","streetHasError","streetChangeHandler","streetBlurHandler","resetStreet","enteredCity","isCityValid","cityHasError","cityChangeHandler","cityBlurHandler","resetCity","enteredPostal","isPostalValid","postalHasError","postalChangeHandler","postalBlurHandler","resetPostal","formValid","confirmHandler","ev","preventDefault","console","log","form","control","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport useInputValidity from \"../UI/use-inputValidity\";\n\nconst Checkout = (props) => {\n    // const nameRef= useRef();\n    // const streetRef= useRef();\n    // const postalRef= useRef();\n    // const cityRef= useRef();\n\n    const isNotEmpty = value => value.trim().length !== 0;\n    const is5Chars = value => value.trim().length === 5;\n\n    const {\n        enteredInput: enteredName,\n        isInputValid : isNameValid,\n        hasError: nameHasError,\n        inputChangehandler: nameChangeHandler,\n        inputBlurhandler : nameBlurHandler,\n        resetInput: resetName\n    } = useInputValidity(isNotEmpty);\n    const {\n        enteredInput: enteredStreet,\n        isInputValid : isStreetValid,\n        hasError: streetHasError,\n        inputChangehandler: streetChangeHandler,\n        inputBlurhandler : streetBlurHandler,\n        resetInput: resetStreet\n    } = useInputValidity(isNotEmpty);\n    const {\n        enteredInput: enteredCity,\n        isInputValid : isCityValid,\n        hasError: cityHasError,\n        inputChangehandler: cityChangeHandler,\n        inputBlurhandler : cityBlurHandler,\n        resetInput: resetCity\n    } = useInputValidity(isNotEmpty);\n    const {\n        enteredInput: enteredPostal,\n        isInputValid : isPostalValid,\n        hasError: postalHasError,\n        inputChangehandler: postalChangeHandler,\n        inputBlurhandler : postalBlurHandler,\n        resetInput: resetPostal\n    } = useInputValidity(is5Chars);\n    \n    const formValid = isNameValid && isStreetValid && isPostalValid && isCityValid;\n\n  const confirmHandler = (ev) => {\n    ev.preventDefault();\n\n    \n\n\n    // const enteredName = nameRef.current.value;\n    // const enteredStreet = streetRef.current.value;\n    // const enteredPostal = postalRef.current.value;\n    // const enteredCity = cityRef.current.value;\n\n    // const nameValid= !isEmpty(enteredName);\n    // const streetValid= !isEmpty(enteredStreet);\n    // const postalValid= !isEmpty(enteredPostal);\n    // const cityValid= !is5Chars(enteredCity);\n\n     \n\n    if(!formValid){\n        return;\n    }\n\n    console.log(enteredName, enteredStreet, enteredPostal, enteredCity);\n    resetName();\n    resetPostal();\n    resetStreet();\n    resetCity();\n\n  };\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" value={enteredName} onChange={nameChangeHandler} onBlur={nameBlurHandler}/>\n        {nameHasError && <p>Name has error</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" value={enteredStreet} onChange={streetChangeHandler} onBlur={streetBlurHandler}/>\n        {streetHasError && <p>Street has error</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" value={enteredPostal} onChange={postalChangeHandler} onBlur={postalBlurHandler}/>\n        {postalHasError && <p>Postal has error</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" value={enteredCity} onChange={cityChangeHandler} onBlur={cityBlurHandler}/>\n        {cityHasError && <p>City has error</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}