{"ast":null,"code":"var _jsxFileName = \"/Users/poojapasupu/Documents/react_workspace/food-order-app-forms-13/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport useInputValidity from \"../UI/use-inputValidity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const isNotEmpty = value => value.trim().length !== 0;\n\n  const is5Chars = value => value.trim().length === 5;\n\n  const {\n    enteredInput: enteredName,\n    isInputValid: isNameValid,\n    hasError: nameHasError,\n    inputChangehandler: nameChangeHandler,\n    inputBlurhandler: nameBlurHandler,\n    resetInput: resetName\n  } = useInputValidity(isNotEmpty);\n  const {\n    enteredInput: enteredStreet,\n    isInputValid: isStreetValid,\n    hasError: streetHasError,\n    inputChangehandler: streetChangeHandler,\n    inputBlurhandler: streetBlurHandler,\n    resetInput: resetStreet\n  } = useInputValidity(isNotEmpty);\n  const {\n    enteredInput: enteredCity,\n    isInputValid: isCityValid,\n    hasError: cityHasError,\n    inputChangehandler: cityChangeHandler,\n    inputBlurhandler: cityBlurHandler,\n    resetInput: resetCity\n  } = useInputValidity(isNotEmpty);\n  const {\n    enteredInput: enteredPostal,\n    isInputValid: isPostalValid,\n    hasError: postalHasError,\n    inputChangehandler: postalChangeHandler,\n    inputBlurhandler: postalBlurHandler,\n    resetInput: resetPostal\n  } = useInputValidity(is5Chars);\n  const formValid = isNameValid && isStreetValid && isPostalValid && isCityValid;\n\n  const confirmHandler = ev => {\n    ev.preventDefault();\n\n    if (!formValid) {\n      return;\n    }\n\n    console.log(enteredName, enteredStreet, enteredPostal, enteredCity);\n    resetName();\n    resetPostal();\n    resetStreet();\n    resetCity();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name has error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        value: enteredStreet,\n        onChange: streetChangeHandler,\n        onBlur: streetBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), streetHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Street has error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        value: enteredPostal,\n        onChange: postalChangeHandler,\n        onBlur: postalBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), postalHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Postal has error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        value: enteredCity,\n        onChange: cityChangeHandler,\n        onBlur: cityBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), cityHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"City has error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formValid,\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"YLK949g94aa0jeH/sE9SLaOecug=\", false, function () {\n  return [useInputValidity, useInputValidity, useInputValidity, useInputValidity];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/poojapasupu/Documents/react_workspace/food-order-app-forms-13/src/components/Cart/Checkout.js"],"names":["React","classes","useInputValidity","Checkout","props","isNotEmpty","value","trim","length","is5Chars","enteredInput","enteredName","isInputValid","isNameValid","hasError","nameHasError","inputChangehandler","nameChangeHandler","inputBlurhandler","nameBlurHandler","resetInput","resetName","enteredStreet","isStreetValid","streetHasError","streetChangeHandler","streetBlurHandler","resetStreet","enteredCity","isCityValid","cityHasError","cityChangeHandler","cityBlurHandler","resetCity","enteredPostal","isPostalValid","postalHasError","postalChangeHandler","postalBlurHandler","resetPostal","formValid","confirmHandler","ev","preventDefault","console","log","form","control","actions","onCancel","submit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAN,GAAaC,MAAb,KAAwB,CAAtD;;AACA,QAAMC,QAAQ,GAAIH,KAAD,IAAWA,KAAK,CAACC,IAAN,GAAaC,MAAb,KAAwB,CAApD;;AAEA,QAAM;AACJE,IAAAA,YAAY,EAAEC,WADV;AAEJC,IAAAA,YAAY,EAAEC,WAFV;AAGJC,IAAAA,QAAQ,EAAEC,YAHN;AAIJC,IAAAA,kBAAkB,EAAEC,iBAJhB;AAKJC,IAAAA,gBAAgB,EAAEC,eALd;AAMJC,IAAAA,UAAU,EAAEC;AANR,MAOFnB,gBAAgB,CAACG,UAAD,CAPpB;AASA,QAAM;AACJK,IAAAA,YAAY,EAAEY,aADV;AAEJV,IAAAA,YAAY,EAAEW,aAFV;AAGJT,IAAAA,QAAQ,EAAEU,cAHN;AAIJR,IAAAA,kBAAkB,EAAES,mBAJhB;AAKJP,IAAAA,gBAAgB,EAAEQ,iBALd;AAMJN,IAAAA,UAAU,EAAEO;AANR,MAOFzB,gBAAgB,CAACG,UAAD,CAPpB;AASA,QAAM;AACJK,IAAAA,YAAY,EAAEkB,WADV;AAEJhB,IAAAA,YAAY,EAAEiB,WAFV;AAGJf,IAAAA,QAAQ,EAAEgB,YAHN;AAIJd,IAAAA,kBAAkB,EAAEe,iBAJhB;AAKJb,IAAAA,gBAAgB,EAAEc,eALd;AAMJZ,IAAAA,UAAU,EAAEa;AANR,MAOF/B,gBAAgB,CAACG,UAAD,CAPpB;AASA,QAAM;AACJK,IAAAA,YAAY,EAAEwB,aADV;AAEJtB,IAAAA,YAAY,EAAEuB,aAFV;AAGJrB,IAAAA,QAAQ,EAAEsB,cAHN;AAIJpB,IAAAA,kBAAkB,EAAEqB,mBAJhB;AAKJnB,IAAAA,gBAAgB,EAAEoB,iBALd;AAMJlB,IAAAA,UAAU,EAAEmB;AANR,MAOFrC,gBAAgB,CAACO,QAAD,CAPpB;AASA,QAAM+B,SAAS,GACb3B,WAAW,IAAIU,aAAf,IAAgCY,aAAhC,IAAiDN,WADnD;;AAGA,QAAMY,cAAc,GAAIC,EAAD,IAAQ;AAC7BA,IAAAA,EAAE,CAACC,cAAH;;AAEA,QAAI,CAACH,SAAL,EAAgB;AACd;AACD;;AAEDI,IAAAA,OAAO,CAACC,GAAR,CAAYlC,WAAZ,EAAyBW,aAAzB,EAAwCY,aAAxC,EAAuDN,WAAvD;AACAP,IAAAA,SAAS;AACTkB,IAAAA,WAAW;AACXZ,IAAAA,WAAW;AACXM,IAAAA,SAAS;AACV,GAZD;;AAcA,sBACE;AAAM,IAAA,SAAS,EAAEhC,OAAO,CAAC6C,IAAzB;AAA+B,IAAA,QAAQ,EAAEL,cAAzC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAExC,OAAO,CAAC8C,OAAxB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,KAAK,EAAEpC,WAHT;AAIE,QAAA,QAAQ,EAAEM,iBAJZ;AAKE,QAAA,MAAM,EAAEE;AALV;AAAA;AAAA;AAAA;AAAA,cAFF,EASGJ,YAAY,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAEd,OAAO,CAAC8C,OAAxB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,QAFL;AAGE,QAAA,KAAK,EAAEzB,aAHT;AAIE,QAAA,QAAQ,EAAEG,mBAJZ;AAKE,QAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,cAFF,EASGF,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAuBE;AAAK,MAAA,SAAS,EAAEvB,OAAO,CAAC8C,OAAxB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,QAFL;AAGE,QAAA,KAAK,EAAEb,aAHT;AAIE,QAAA,QAAQ,EAAEG,mBAJZ;AAKE,QAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,cAFF,EASGF,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,eAkCE;AAAK,MAAA,SAAS,EAAEnC,OAAO,CAAC8C,OAAxB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,KAAK,EAAEnB,WAHT;AAIE,QAAA,QAAQ,EAAEG,iBAJZ;AAKE,QAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,cAFF,EASGF,YAAY,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCF,eA6CE;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAAC+C,OAAxB;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE5C,KAAK,CAAC6C,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,QAAQ,EAAE,CAACT,SAAnB;AAA8B,QAAA,SAAS,EAAEvC,OAAO,CAACiD,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwDD,CAlHD;;GAAM/C,Q;UAYAD,gB,EASAA,gB,EASAA,gB,EASAA,gB;;;KAvCAC,Q;AAoHN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport useInputValidity from \"../UI/use-inputValidity\";\n\nconst Checkout = (props) => {\n\n  const isNotEmpty = (value) => value.trim().length !== 0;\n  const is5Chars = (value) => value.trim().length === 5;\n\n  const {\n    enteredInput: enteredName,\n    isInputValid: isNameValid,\n    hasError: nameHasError,\n    inputChangehandler: nameChangeHandler,\n    inputBlurhandler: nameBlurHandler,\n    resetInput: resetName,\n  } = useInputValidity(isNotEmpty);\n  \n  const {\n    enteredInput: enteredStreet,\n    isInputValid: isStreetValid,\n    hasError: streetHasError,\n    inputChangehandler: streetChangeHandler,\n    inputBlurhandler: streetBlurHandler,\n    resetInput: resetStreet,\n  } = useInputValidity(isNotEmpty);\n\n  const {\n    enteredInput: enteredCity,\n    isInputValid: isCityValid,\n    hasError: cityHasError,\n    inputChangehandler: cityChangeHandler,\n    inputBlurhandler: cityBlurHandler,\n    resetInput: resetCity,\n  } = useInputValidity(isNotEmpty);\n\n  const {\n    enteredInput: enteredPostal,\n    isInputValid: isPostalValid,\n    hasError: postalHasError,\n    inputChangehandler: postalChangeHandler,\n    inputBlurhandler: postalBlurHandler,\n    resetInput: resetPostal,\n  } = useInputValidity(is5Chars);\n\n  const formValid =\n    isNameValid && isStreetValid && isPostalValid && isCityValid;\n\n  const confirmHandler = (ev) => {\n    ev.preventDefault();\n\n    if (!formValid) {\n      return;\n    }\n\n    console.log(enteredName, enteredStreet, enteredPostal, enteredCity);\n    resetName();\n    resetPostal();\n    resetStreet();\n    resetCity();\n  };\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n        />\n        {nameHasError && <p>Name has error</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"street\">Street</label>\n        <input\n          type=\"text\"\n          id=\"street\"\n          value={enteredStreet}\n          onChange={streetChangeHandler}\n          onBlur={streetBlurHandler}\n        />\n        {streetHasError && <p>Street has error</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input\n          type=\"text\"\n          id=\"postal\"\n          value={enteredPostal}\n          onChange={postalChangeHandler}\n          onBlur={postalBlurHandler}\n        />\n        {postalHasError && <p>Postal has error</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"city\">City</label>\n        <input\n          type=\"text\"\n          id=\"city\"\n          value={enteredCity}\n          onChange={cityChangeHandler}\n          onBlur={cityBlurHandler}\n        />\n        {cityHasError && <p>City has error</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button disabled={!formValid} className={classes.submit}>\n          Confirm\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}